// Copyright (C) 2017-2020  Waterloo Quantitative Consulting Group, Inc. 
// See COPYING and LICENSE files at project root for more details. 

#pragma once
#include "Types.hpp"
#include "BlitzHelpers.hpp"
#include <vector>
#include <boost/python/numpy.hpp>

namespace blitzdg {
	class CubatureContext2D {
	private:
		index_type NCubature_;
		std::vector<real_matrix_type> CubatureRules_;
		static const index_type NumPreComputed = 28;

	public:
		CubatureContext2D() = default;

		CubatureContext2D(
			index_type NCubature
		) :
			NCubature_{ NCubature },
			CubatureRules_{ NumPreComputed }
		{
			CubatureRules_[0] = real_matrix_type(1, 3, ColumnMajorOrder());
			CubatureRules_[0] = -0.333333333333333, -0.333333333333333, 2.000000000000000;

			CubatureRules_[1] = real_matrix_type(3, 3, ColumnMajorOrder());
			CubatureRules_[1] = -0.666666666666667, - 0.666666666666667, 0.666666666666667,
				0.333333333333333, - 0.666666666666667, 0.666666666666667,
				-0.666666666666667, 0.333333333333333, 0.666666666666667;

			CubatureRules_[2] = real_matrix_type(6, 3, ColumnMajorOrder());
			CubatureRules_[2] = -0.816847572980458, - 0.816847572980458, 0.219903487310644,
				 0.633695145960917 - 0.816847572980459, 0.219903487310644,
				-0.816847572980459, 0.633695145960917, 0.219903487310644,
				-0.108103018168070, - 0.108103018168070, 0.446763179356023
				-0.783793963663860, - 0.108103018168070, 0.446763179356023
				-0.108103018168070, - 0.783793963663860, 0.446763179356023;
		
			CubatureRules_[3] = CubatureRules_[2];

			CubatureRules_[4] = real_matrix_type(7, 3, ColumnMajorOrder());
			CubatureRules_[4] = -0.333333333333333, - 0.333333333333333, 0.450000000000000,
				-0.059715871789770, - 0.059715871789770, 0.264788305577012,
				-0.880568256420460, - 0.059715871789770, 0.264788305577012,
				-0.059715871789770, - 0.880568256420460, 0.264788305577012,
				-0.797426985353087, - 0.797426985353087, 0.251878361089654,
				 0.594853970706175, - 0.797426985353087, 0.251878361089654,
				-0.797426985353087, 0.594853970706175, 0.251878361089654;

			CubatureRules_[5] = real_matrix_type(12, 3, ColumnMajorOrder());
			CubatureRules_[5] = -0.501426509658179, - 0.501426509658179, 0.233572551452759,
				0.002853019316358, - 0.501426509658179, 0.233572551452759,
				-0.501426509658179, 0.002853019316358, 0.233572551452759,
				-0.873821971016996, - 0.873821971016996, 0.101689812740414,
				0.747643942033991, - 0.873821971016996, 0.101689812740414,
				-0.873821971016996, 0.747643942033991, 0.101689812740414,
				-0.379295097932431, - 0.893709900310366, 0.165702151236747,
				-0.893709900310366, - 0.379295097932431, 0.165702151236747,
				0.273004998242797, - 0.893709900310366, 0.165702151236747,
				-0.893709900310366, 0.273004998242797, 0.165702151236747,
				0.273004998242797, - 0.379295097932431, 0.165702151236747,
				-0.379295097932431, 0.273004998242797, 0.165702151236747;

		}

		const index_type NCubature() const { return NCubature_; }
	};
}
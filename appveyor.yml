# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: '0.3.1.{build}'

# branches to build
branches:
  except:
    - gh-pages

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2019

# scripts that are called at very beginning, before repo cloning
init:
  - git config --global core.autocrlf input

# clone directory
clone_folder: c:\projects\blitzdg

# fetch repository as zip archive
shallow_clone: true                 # default is "false"

# set clone depth
clone_depth: 1                      # clone entire repository history if not defined

# environment variables
#environment:
#  my_var1: value1
#  my_var2: value2
  # this is how to set encrypted variable. Go to "Settings" -> "Encrypt YAML" page in account menu to encrypt data.
#  my_secure_var1:
#    secure: FW3tJ3fMncxvs58/ifSP7w==

matrix:
  fast_finish: true     # set this flag to immediately finish build once one of the jobs fails.
# exclude configuration from the matrix. Works similarly to 'allow_failures' but build not even being started for excluded combination.
  exclude:
    - platform: x86
      configuration: Debug

cache:
  - blitzdg\libs

# scripts that run after cloning repository
install:
  # by default, all script lines are interpreted as batch
  - echo This is batch
  # to run script as a PowerShell command prepend it with ps:
  - ps: >-
      $ErrorActionPreference = 'Stop'
      Push-Location "c:\projects\blitzdg"
      Invoke-RestMethod -Uri "https://s3.amazonaws.com/dsteinmo-libs/include-deps.zip" -OutFile "include-deps.zip"
      Invoke-RestMethod -Uri "https://s3.amazonaws.com/dsteinmo-libs/deps-win-mingw64-gcc7.zip" -OutFile "deps-win-mingw64.zip"
      Expand-Archive -Path include-deps.zip -DestinationPath ".\include\" -Force
      Expand-Archive -Path deps-win-mingw64.zip -DestinationPath ".\lib\" -Force
      cmake -A "Win64" -G "Microsoft Visual Studio 16 2019" .
      Pop-Location

  # batch commands start from cmd:
  #- cmd: echo This is batch again
  #- cmd: set MY_VAR=12345



#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x64

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  parallel: true            # enable MSBuild parallel builds
  project: blitzdg.sln      # path to Visual Studio solution or project

  # MSBuild verbosity level
  verbosity: normal


# scripts to run before build
before_build:

# to run your custom scripts instead of automatic MSBuild
build_script:

# scripts to run after build (working directory and environment changes are persisted from the previous steps)
after_build:

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# to disable automatic builds
#build: off

#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to disable automatic tests
test: off


#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:

  # pushing a single file with environment variable in path and "Deployment name" specified
  - path: blitzdg\bin\Release\*.*
    name: myapp

  # pushing entire folder as a zip archive
  - path: logs


#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
#on_success:
#  - do something

# on build failure
#on_failure:
#  - do something

# after build failure or success
#on_finish:
#  - do something


#---------------------------------#
#         notifications           #
#---------------------------------#

notifications:
  # Slack
  #- provider: Slack
  #  incoming_webhook: http://incoming-webhook-url

  # ...or using auth token
